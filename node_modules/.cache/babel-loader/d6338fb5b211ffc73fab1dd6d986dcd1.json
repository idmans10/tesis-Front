{"remainingRequest":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\visualizacion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\visualizacion.vue","mtime":1597697076609},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmluZGV4LW9mIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvSURBTkdFTEVTL0RvY3VtZW50cy9VRC9UZXNpcy9XRUIvRnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgQ2FsZW5kYXIgZnJvbSAiQC9jb21wb25lbnRzL0NhbGVuZGFyLnZ1ZSI7CmltcG9ydCB7IHBvc3RSZXF1ZXN0IH0gZnJvbSAiQC9wbHVnaW5zL2FwaS5qcyI7CmltcG9ydCBMaW5lQ2hhcnQgZnJvbSAiQC9jb21wb25lbnRzL0FyZWFDaGFydC52dWUiOwppbXBvcnQgRG91Z2hudXRDaGFydCBmcm9tICJAL2NvbXBvbmVudHMvQ2hhcnREb251dC52dWUiOwpleHBvcnQgZGVmYXVsdCB7CiAgY29tcG9uZW50czogewogICAgTGluZUNoYXJ0OiBMaW5lQ2hhcnQsCiAgICBEb3VnaG51dENoYXJ0OiBEb3VnaG51dENoYXJ0LAogICAgQ2FsZW5kYXI6IENhbGVuZGFyCiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdGhpcy51cGRhdGVQaXNjaWNvbGFzKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpOwogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGluaXREYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSwKICAgICAgZmluYWxEYXRlOiBuZXcgRGF0ZSgpLnRvSVNPU3RyaW5nKCkuc3Vic3RyKDAsIDEwKSwKICAgICAgaW50ZXJ2YWxJZDogbnVsbCwKICAgICAgcGlzY2ljb2xhczogW10sCiAgICAgIHBpc2NpY29sYXNmdWxsOiBbXSwKICAgICAgc2VsZWN0ZWRQaXNjaWNvbGE6IHsKICAgICAgICBkZXNjcmlwY2lvbjogIiIsCiAgICAgICAgaWRfcGlzY2ljb2xhczogbnVsbCwKICAgICAgICBpZF91c3VhcmlvOiBudWxsLAogICAgICAgIG5vbWJyZV9waXNjaWNvbGE6ICIiLAogICAgICAgIHViaWNhY2lvbjogIiIKICAgICAgfSwKICAgICAgZXN0YW5xdWVzOiBbXSwKICAgICAgZXN0YW5xdWVzZnVsbDogW10sCiAgICAgIHNlbGVjdGVkRXN0YW5xdWU6IHsKICAgICAgICBpZF9lc3RhbnF1ZTogbnVsbCwKICAgICAgICBpZF9waXNjaWNvbGFzOiBudWxsLAogICAgICAgIG5vbWJyZV9lc3RhbnF1ZTogIiIsCiAgICAgICAgZGVzY3JpcGNpb246ICIiCiAgICAgIH0sCiAgICAgIHNlbnNvcmVzZnVsbDogW10sCiAgICAgIGlkX3Bpc2NpY29sYXM6IHsKICAgICAgICB0ZXh0OiAiU2VsZWNjaW9uYXIgcGlzY8OtY29sYSIsCiAgICAgICAgdmFsdWU6IDAKICAgICAgfSwKICAgICAgaWRfZXN0YW5xdWU6IHsKICAgICAgICB0ZXh0OiAiU2VsZWNjaW9uYXIgRXN0YW5xdWUiLAogICAgICAgIHZhbHVlOiAwCiAgICAgIH0sCiAgICAgIG1lZGljaW9uZXM6IFtdLAogICAgICBpbmRpY2Fkb3JlczogbnVsbCwKICAgICAgcGVyaW9kb3M6IFtdLAogICAgICBkYXRvU2Vuc29yOiBbXSwKICAgICAgZGF0YUNhbGN1bGFkYWZ1bGw6IFtdLAogICAgICBkYXRhQ2hhcnRzOiBbXSwKICAgICAgY2hhcnRPcHRpb25zOiB7CiAgICAgICAgZWxlbWVudHM6IHsKICAgICAgICAgIHJlY3RhbmdsZTogewogICAgICAgICAgICBib3JkZXJXaWR0aDogMiwKICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICJyZ2IoMCwgMjU1LCAwKSIsCiAgICAgICAgICAgIGJvcmRlclNraXBwZWQ6ICJib3R0b20iCiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBzY2FsZXM6IHsKICAgICAgICAgIHlBeGVzOiBbewogICAgICAgICAgICBiYXJQZXJjZW50YWdlOiAxLjYsCiAgICAgICAgICAgIGdyaWRMaW5lczogewogICAgICAgICAgICAgIGRyYXdCb3JkZXI6IGZhbHNlLAogICAgICAgICAgICAgIGNvbG9yOiAicmdiYSgyOSwxNDAsMjQ4LDAuMCkiLAogICAgICAgICAgICAgIHplcm9MaW5lQ29sb3I6ICJ0cmFuc3BhcmVudCIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGlja3M6IHsKICAgICAgICAgICAgICBzdWdnZXN0ZWRNaW46IDAsCiAgICAgICAgICAgICAgcGFkZGluZzogMjAsCiAgICAgICAgICAgICAgZm9udENvbG9yOiAiI2ZmOGE3NiIKICAgICAgICAgICAgfQogICAgICAgICAgfV0sCiAgICAgICAgICB4QXhlczogW3sKICAgICAgICAgICAgdHlwZTogInRpbWUiLAogICAgICAgICAgICB0aW1lOiB7CiAgICAgICAgICAgICAgdW5pdDogImhvdXIiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGJhclBlcmNlbnRhZ2U6IDEuNiwKICAgICAgICAgICAgZ3JpZExpbmVzOiB7CiAgICAgICAgICAgICAgZHJhd0JvcmRlcjogZmFsc2UsCiAgICAgICAgICAgICAgY29sb3I6ICJyZ2JhKDIyMCw1Myw2OSwwLjEpIiwKICAgICAgICAgICAgICB6ZXJvTGluZUNvbG9yOiAidHJhbnNwYXJlbnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgcGFkZGluZzogMjAsCiAgICAgICAgICAgICAgZm9udENvbG9yOiAiI2ZmOGE3NiIKICAgICAgICAgICAgfQogICAgICAgICAgfV0KICAgICAgICB9CiAgICAgIH0sCiAgICAgIGNoYXJ0T3B0aW9uczI6IHsKICAgICAgICByb3RhdGlvbjogTWF0aC5QSSwKICAgICAgICBjaXJjdW1mZXJlbmNlOiBNYXRoLlBJCiAgICAgIH0KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9LCBfY2FsbGVlKTsKICAgIH0pKSgpOwogIH0sCiAgbWV0aG9kczogewogICAgc2VsZWN0ZWRJbml0RGF0ZTogZnVuY3Rpb24gc2VsZWN0ZWRJbml0RGF0ZShmZWNoYU9idGVuaWRhRGVsSGlqbykgewogICAgICBjb25zb2xlLmxvZygiZmVjaGFPYnRlbmlkYURlbEhpam8gLS0tLS0tPiIpOwogICAgICBjb25zb2xlLmxvZyhmZWNoYU9idGVuaWRhRGVsSGlqbyk7CiAgICAgIGNvbnNvbGUubG9nKCJpbml0RGF0ZSAtLS0tLS0+Iik7CiAgICAgIHRoaXMuaW5pdERhdGUgPSBmZWNoYU9idGVuaWRhRGVsSGlqbyArICIgMDA6MDA6MDAiOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmluaXREYXRlKTsgLy90aGlzLnVwZGF0ZU1lZGljaW9uZXMoKQogICAgfSwKICAgIHNlbGVjdGVkRmluYWxEYXRlOiBmdW5jdGlvbiBzZWxlY3RlZEZpbmFsRGF0ZShmZWNoYU9idGVuaWRhRGVsSGlqbykgewogICAgICBjb25zb2xlLmxvZygiZmVjaGFPYnRlbmlkYURlbEhpam8gLS0tLS0tPiIpOwogICAgICBjb25zb2xlLmxvZyhmZWNoYU9idGVuaWRhRGVsSGlqbyk7CiAgICAgIGNvbnNvbGUubG9nKCJmaW5hbERhdGUgLS0tLS0tPiIpOwogICAgICB0aGlzLmZpbmFsRGF0ZSA9IGZlY2hhT2J0ZW5pZGFEZWxIaWpvICsgIiAyMzo1OTo1OSI7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmluYWxEYXRlKTsgLy8gdGhpcy51cGRhdGVNZWRpY2lvbmVzKCkKICAgIH0sCiAgICBzZWxlY3RlZEl0ZW1QaXNjaWNvbGE6IGZ1bmN0aW9uIHNlbGVjdGVkSXRlbVBpc2NpY29sYSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHRoaXMuc2VsZWN0ZWRQaXNjaWNvbGEgPSB0aGlzLnBpc2NpY29sYXNmdWxsLmZpbmQoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geC5pZF9waXNjaWNvbGFzID09PSBfdGhpcy5pZF9waXNjaWNvbGFzLnZhbHVlOwogICAgICB9KTsKICAgICAgdGhpcy51cGRhdGVFc3RhbnF1ZXMoKTsKICAgIH0sCiAgICBzZWxlY3RlZEl0ZW1Fc3RhbnF1ZTogZnVuY3Rpb24gc2VsZWN0ZWRJdGVtRXN0YW5xdWUoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5zZWxlY3RlZEVzdGFucXVlID0gdGhpcy5lc3RhbnF1ZXNmdWxsLmZpbmQoZnVuY3Rpb24gKHgpIHsKICAgICAgICByZXR1cm4geC5pZF9lc3RhbnF1ZSA9PT0gX3RoaXMyLmlkX2VzdGFucXVlLnZhbHVlOwogICAgICB9KTsKICAgICAgdGhpcy51cGRhdGVTZW5zb3JlcygpOwogICAgfSwKICAgIHVwZGF0ZVBpc2NpY29sYXM6IGZ1bmN0aW9uIHVwZGF0ZVBpc2NpY29sYXMoKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcG9zdFJlcXVlc3QoInBpc2NpY29sYXMiKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJlcyA9PSAyMDApIHsKICAgICAgICAgIF90aGlzMy5waXNjaWNvbGFzID0gcmVzcG9uc2UuZGF0YS5kYXRhLm1hcChmdW5jdGlvbiAocGlzY2ljb2xhKSB7CiAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgdGV4dDogcGlzY2ljb2xhLm5vbWJyZV9waXNjaWNvbGEsCiAgICAgICAgICAgICAgdmFsdWU6IHBpc2NpY29sYS5pZF9waXNjaWNvbGFzCiAgICAgICAgICAgIH07CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzMy5waXNjaWNvbGFzZnVsbCA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICB9IGVsc2UgYWxlcnQocmVzcG9uc2UuZGF0YS5tc2cpOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVFc3RhbnF1ZXM6IGZ1bmN0aW9uIHVwZGF0ZUVzdGFucXVlcygpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICBwb3N0UmVxdWVzdCgiZXN0YW5xdWVzIiwgewogICAgICAgIGlkX3Bpc2NpY29sYXM6IHRoaXMuaWRfcGlzY2ljb2xhcy52YWx1ZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJlcyA9PSAyMDApIHsKICAgICAgICAgIF90aGlzNC5lc3RhbnF1ZXMgPSByZXNwb25zZS5kYXRhLmRhdGEubWFwKGZ1bmN0aW9uIChlc3RhbnF1ZSkgewogICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgIHRleHQ6IGVzdGFucXVlLm5vbWJyZV9lc3RhbnF1ZSwKICAgICAgICAgICAgICB2YWx1ZTogZXN0YW5xdWUuaWRfZXN0YW5xdWUKICAgICAgICAgICAgfTsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXM0LmVzdGFucXVlc2Z1bGwgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVTZW5zb3JlczogZnVuY3Rpb24gdXBkYXRlU2Vuc29yZXMoKSB7CiAgICAgIHZhciBfdGhpczUgPSB0aGlzOwoKICAgICAgcG9zdFJlcXVlc3QoInNlbnNvcmVzIiwgewogICAgICAgIGlkX2VzdGFucXVlOiB0aGlzLmlkX2VzdGFucXVlLnZhbHVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEucmVzID09IDIwMCkgewogICAgICAgICAgX3RoaXM1LnNlbnNvcmVzZnVsbCA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKCJzZW5zb3Jlc2Z1bGwtLS0tLS0+Iik7CiAgICAgICAgY29uc29sZS5sb2coX3RoaXM1LnNlbnNvcmVzZnVsbCk7CiAgICAgIH0pOwogICAgfSwKICAgIHVwZGF0ZU1lZGljaW9uZXNJbmRpY2Fkb3JlczogZnVuY3Rpb24gdXBkYXRlTWVkaWNpb25lc0luZGljYWRvcmVzKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGNvbnNvbGUubG9nKCJQYXPDsyBwb3IgdXBkYXRlTWVkaWNpb25lc0luZGljYWRvcmVzIik7CiAgICAgIHBvc3RSZXF1ZXN0KCJtZWRpY2lvbmVzIiwgewogICAgICAgIGlkX2VzdGFucXVlOiB0aGlzLmlkX2VzdGFucXVlLnZhbHVlLAogICAgICAgIGluaXREYXRlOiB0aGlzLmluaXREYXRlLAogICAgICAgIGZpbmFsRGF0ZTogdGhpcy5maW5hbERhdGUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5yZXMgPT0gMjAwKSB7CiAgICAgICAgICBfdGhpczYubWVkaWNpb25lcyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJtZWRpY2lvbmVzOiIpOwogICAgICAgICAgY29uc29sZS5sb2coX3RoaXM2Lm1lZGljaW9uZXMpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHBvc3RSZXF1ZXN0KCJkYXRhX2NhbGN1bGFkYSIsIHsKICAgICAgICBpZF9lc3RhbnF1ZTogdGhpcy5pZF9lc3RhbnF1ZS52YWx1ZQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnJlcyA9PSAyMDApIHsKICAgICAgICAgIF90aGlzNi5pbmRpY2Fkb3JlcyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgIGNvbnNvbGUubG9nKCJpbmRpY2Fkb3JlczoiKTsKICAgICAgICAgIGNvbnNvbGUubG9nKF90aGlzNi5pbmRpY2Fkb3Jlcyk7CgogICAgICAgICAgX3RoaXM2LmdyYWZpY2FzKCk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBncmFmaWNhczogZnVuY3Rpb24gZ3JhZmljYXMoKSB7CiAgICAgIHZhciBfdGhpczcgPSB0aGlzOwoKICAgICAgY29uc29sZS5sb2coIlBhc8OzIHBvciBncmFmaWNhcyIpOwogICAgICBjb25zb2xlLmxvZyh0aGlzLmludGVydmFsSWQpOwogICAgICBjb25zb2xlLmxvZygiLS0tLS0tLS0tLS0iKTsKCiAgICAgIHZhciBvbmx5VW5pcXVlID0gZnVuY3Rpb24gb25seVVuaXF1ZSh2YWx1ZSwgaW5kZXgsIHNlbGYpIHsKICAgICAgICByZXR1cm4gc2VsZi5pbmRleE9mKHZhbHVlKSA9PT0gaW5kZXg7CiAgICAgIH07CgogICAgICB2YXIgc2Vuc29yZXMgPSB0aGlzLm1lZGljaW9uZXMubWFwKGZ1bmN0aW9uIChtKSB7CiAgICAgICAgcmV0dXJuIG0uaWRfc2Vuc29yZXM7CiAgICAgIH0pLmZpbHRlcihvbmx5VW5pcXVlKTsKICAgICAgdGhpcy5wZXJpb2RvcyA9IHRoaXMuaW5kaWNhZG9yZXMubWFwKGZ1bmN0aW9uIChtKSB7CiAgICAgICAgcmV0dXJuIG0ucGVyaW9kbzsKICAgICAgfSkuZmlsdGVyKG9ubHlVbmlxdWUpOwogICAgICBjb25zb2xlLmxvZygicGVyaW9kb3MtLS0tLT4iKTsKICAgICAgY29uc29sZS5sb2codGhpcy5wZXJpb2Rvcyk7CiAgICAgIHZhciBkYXRhQ2hhcnRzID0gc2Vuc29yZXMubWFwKGZ1bmN0aW9uIChzZW5zb3IpIHsKICAgICAgICB2YXIgbWVkaWNpb25lc1NlbnNvciA9IF90aGlzNy5tZWRpY2lvbmVzLmZpbHRlcihmdW5jdGlvbiAobSkgewogICAgICAgICAgcmV0dXJuIG0uaWRfc2Vuc29yZXMgPT0gc2Vuc29yOwogICAgICAgIH0pOwoKICAgICAgICB2YXIgaW5kaWNhZG9yZXNTZW5zb3IgPSBfdGhpczcuaW5kaWNhZG9yZXMuZmlsdGVyKGZ1bmN0aW9uIChpKSB7CiAgICAgICAgICByZXR1cm4gaS5pZF9zZW5zb3JlcyA9PSBzZW5zb3I7CiAgICAgICAgfSk7CgogICAgICAgIHZhciBkYXRhU2Vuc29yID0gX3RoaXM3LnNlbnNvcmVzZnVsbC5maWx0ZXIoZnVuY3Rpb24gKHMpIHsKICAgICAgICAgIHJldHVybiBzLmlkX3NlbnNvcmVzID09IHNlbnNvcjsKICAgICAgICB9KTsKCiAgICAgICAgdmFyIGRhdGFDaGFydHNEb251dCA9IGluZGljYWRvcmVzU2Vuc29yLm1hcChmdW5jdGlvbiAoaW5kaSkgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgbGFiZWxzOiBbIk1heCIsICJNaW4iXSwKICAgICAgICAgICAgZGF0YXNldHM6IFt7CiAgICAgICAgICAgICAgZGF0YTogW2luZGlbIm1heChkYXRvKSJdLCBpbmRpWyJtaW4oZGF0bykiXV0sCiAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbIiNGMDgwODAiLCAiI0ZGRjE3NiJdLAogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAzCiAgICAgICAgICAgIH1dCiAgICAgICAgICB9OwogICAgICAgIH0pOwogICAgICAgIHJldHVybiB7CiAgICAgICAgICBsaW5lOiB7CiAgICAgICAgICAgIGxhYmVsczogbWVkaWNpb25lc1NlbnNvci5tYXAoZnVuY3Rpb24gKG0pIHsKICAgICAgICAgICAgICByZXR1cm4gbS5mZWNoYTsKICAgICAgICAgICAgfSksCiAgICAgICAgICAgIGRhdGFzZXRzOiBbewogICAgICAgICAgICAgIGxhYmVsOiBkYXRhU2Vuc29yLm1hcChmdW5jdGlvbiAobSkgewogICAgICAgICAgICAgICAgcmV0dXJuIG0ubm9tYnJlX3NlbnNvcjsKICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICBib3JkZXJDb2xvcjogIiNkMDQ4YjYiLAogICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAyLAogICAgICAgICAgICAgIHBvaW50QmFja2dyb3VuZENvbG9yOiAiI2QwNDhiNiIsCiAgICAgICAgICAgICAgcG9pbnRCb3JkZXJDb2xvcjogInJnYmEoMjU1LDI1NSwyNTUsMCkiLAogICAgICAgICAgICAgIGN1YmljSW50ZXJwb2xhdGlvbk1vZGU6ICJtb25vdG9uZSIsCiAgICAgICAgICAgICAgZGF0YTogbWVkaWNpb25lc1NlbnNvci5tYXAoZnVuY3Rpb24gKG0pIHsKICAgICAgICAgICAgICAgIHJldHVybiBtLmRhdG87CiAgICAgICAgICAgICAgfSkgLy8iIzMyNWQ3OSIsCiAgICAgICAgICAgICAgLy8iIyIgKyAoKCgxIDw8IDI0KSAqIE1hdGgucmFuZG9tKCkpIHwgMCkudG9TdHJpbmcoMTYpLAoKICAgICAgICAgICAgfV0KICAgICAgICAgIH0sCiAgICAgICAgICBkb251dHM6IGRhdGFDaGFydHNEb251dAogICAgICAgIH07CiAgICAgIH0pOwogICAgICB0aGlzLmRhdGFDaGFydHMgPSBkYXRhQ2hhcnRzOwogICAgICBjb25zb2xlLmxvZygiZGF0YUNoYXJ0cy0tLS0tLS0+Iik7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZGF0YUNoYXJ0cyk7CiAgICB9LAogICAgdXBkYXRlQWxsOiBmdW5jdGlvbiB1cGRhdGVBbGwoKSB7CiAgICAgIHZhciBfdGhpczggPSB0aGlzOwoKICAgICAgLy8gdGhpcy51cGRhdGVNZWRpY2lvbmVzSW5kaWNhZG9yZXMoKQogICAgICB0aGlzLmludGVydmFsSWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXM4LnVwZGF0ZU1lZGljaW9uZXNJbmRpY2Fkb3JlcygpOwogICAgICB9LCA0MDAwKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["visualizacion.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col xs=\"12\" sm=\"6\">\r\n        <v-card class=\"pa-2 ma-5\" width=\"350px\" shaped>\r\n          <v-card-title>Piscícola</v-card-title>\r\n          <v-card-text>\r\n            <v-combobox\r\n              color=\"#325d79\"\r\n              item-color=\"#325d79\"\r\n              solo\r\n              hide-details\r\n              class=\"mb-5\"\r\n              :label=\"id_piscicolas.text\"\r\n              :items=\"piscicolas\"\r\n              @change=\"() => selectedItemPiscicola()\"\r\n              v-model=\"id_piscicolas\"\r\n            ></v-combobox>\r\n            <p class=\"pb-1\">Ubicación: {{ selectedPiscicola.ubicacion }}</p>\r\n            <p>Descripción: {{ selectedPiscicola.descripcion }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      <v-col xs=\"12\" sm=\"6\">\r\n        <v-card\r\n          class=\"pa-2 ma-5\"\r\n          width=\"350px\"\r\n          shaped\r\n          :disabled=\"id_piscicolas.value ? false : true\"\r\n        >\r\n          <v-card-title>Estanque</v-card-title>\r\n          <v-card-text class=\"mt-2\">\r\n            <v-combobox\r\n              color=\"#325d79\"\r\n              item-color=\"#325d79\"\r\n              solo\r\n              hide-details\r\n              class=\"mb-12\"\r\n              :label=\"id_estanque.text\"\r\n              :items=\"estanques\"\r\n              @change=\"() => selectedItemEstanque()\"\r\n              v-model=\"id_estanque\"\r\n            ></v-combobox>\r\n            <p>Descripción: {{ selectedEstanque.descripcion }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      <v-col cols=\"6\">\r\n        <Calendar title=\"Inicial\" @selectedDate=\"selectedInitDate\" />\r\n      </v-col>\r\n      <v-col cols=\"6\">\r\n        <Calendar title=\"Final\" @selectedDate=\"selectedFinalDate\" />\r\n      </v-col>\r\n\r\n      <v-col class=\"text-center\" cols=\"12\">\r\n        <v-btn color=\"#325d79\" outlined @click=\"updateMedicionesIndicadores()\"\r\n          >Visualizar</v-btn\r\n        >\r\n      </v-col>\r\n      <v-col cols=\"12\" v-for=\"(chartData, index) in dataCharts\" :key=\"index\">\r\n        <v-card class=\"pa-2 ma-auto\" width=\"2000px\" shaped>\r\n          <v-container>\r\n            <v-row>\r\n              <v-col cols=\"6\" v-scroll:#scroll-target>\r\n                <v-card class=\"pa-5 ma-2\">\r\n                  <line-chart\r\n                    :chartData=\"chartData.line\"\r\n                    :options=\"chartOptions\"\r\n                  />\r\n                </v-card>\r\n              </v-col>\r\n              <v-col cols=\"6\">\r\n                <v-card\r\n                  class=\"pa-5 ma-auto\"\r\n                  width=\"500px\"\r\n                  raised\r\n                  elevation=\"5\"\r\n                  color=\"#FAFAFA\"\r\n                >\r\n                  <v-card-title>Indicadores</v-card-title>\r\n                  <v-container>\r\n                    <v-row>\r\n                      <v-col\r\n                        cols=\"6\"\r\n                        v-for=\"(donut, index) in chartData.donuts\"\r\n                        :key=\"index\"\r\n                      >\r\n                        <p>{{ periodos[index] }}:</p>\r\n                        <doughnut-chart\r\n                          :chartdata=\"donut\"\r\n                          :options=\"chartOptions2\"\r\n                        />\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-container>\r\n                </v-card>\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport Calendar from \"@/components/Calendar.vue\";\r\nimport { postRequest } from \"@/plugins/api.js\";\r\nimport LineChart from \"@/components/AreaChart.vue\";\r\nimport DoughnutChart from \"@/components/ChartDonut.vue\";\r\n\r\nexport default {\r\n  components: { LineChart, DoughnutChart, Calendar },\r\n  created() {\r\n    this.updatePiscicolas();\r\n  },\r\n\r\n  beforeDestroy() {\r\n    clearInterval(this.intervalId);\r\n  },\r\n  data() {\r\n    return {\r\n      initDate: new Date().toISOString().substr(0, 10),\r\n      finalDate: new Date().toISOString().substr(0, 10),\r\n\r\n      intervalId: null,\r\n\r\n      piscicolas: [],\r\n      piscicolasfull: [],\r\n      selectedPiscicola: {\r\n        descripcion: \"\",\r\n        id_piscicolas: null,\r\n        id_usuario: null,\r\n        nombre_piscicola: \"\",\r\n        ubicacion: \"\"\r\n      },\r\n      estanques: [],\r\n      estanquesfull: [],\r\n      selectedEstanque: {\r\n        id_estanque: null,\r\n        id_piscicolas: null,\r\n        nombre_estanque: \"\",\r\n        descripcion: \"\"\r\n      },\r\n      sensoresfull: [],\r\n      id_piscicolas: { text: \"Seleccionar piscícola\", value: 0 },\r\n      id_estanque: { text: \"Seleccionar Estanque\", value: 0 },\r\n      mediciones: [],\r\n      indicadores: null,\r\n      periodos: [],\r\n      datoSensor: [],\r\n      dataCalculadafull: [],\r\n      dataCharts: [],\r\n      chartOptions: {\r\n        elements: {\r\n          rectangle: {\r\n            borderWidth: 2,\r\n            borderColor: \"rgb(0, 255, 0)\",\r\n            borderSkipped: \"bottom\"\r\n          }\r\n        },\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              barPercentage: 1.6,\r\n              gridLines: {\r\n                drawBorder: false,\r\n                color: \"rgba(29,140,248,0.0)\",\r\n                zeroLineColor: \"transparent\"\r\n              },\r\n              ticks: {\r\n                suggestedMin: 0,\r\n                padding: 20,\r\n                fontColor: \"#ff8a76\"\r\n              }\r\n            }\r\n          ],\r\n          xAxes: [\r\n            {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"hour\"\r\n              },\r\n              barPercentage: 1.6,\r\n              gridLines: {\r\n                drawBorder: false,\r\n                color: \"rgba(220,53,69,0.1)\",\r\n                zeroLineColor: \"transparent\"\r\n              },\r\n              ticks: {\r\n                padding: 20,\r\n                fontColor: \"#ff8a76\"\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      chartOptions2: {\r\n        rotation: Math.PI,\r\n        circumference: Math.PI\r\n      }\r\n    };\r\n  },\r\n  async mounted() {},\r\n  methods: {\r\n    selectedInitDate(fechaObtenidaDelHijo) {\r\n      console.log(\"fechaObtenidaDelHijo ------>\");\r\n      console.log(fechaObtenidaDelHijo);\r\n      console.log(\"initDate ------>\");\r\n      this.initDate = fechaObtenidaDelHijo + \" 00:00:00\";\r\n      console.log(this.initDate);\r\n      //this.updateMediciones()\r\n    },\r\n    selectedFinalDate(fechaObtenidaDelHijo) {\r\n      console.log(\"fechaObtenidaDelHijo ------>\");\r\n      console.log(fechaObtenidaDelHijo);\r\n      console.log(\"finalDate ------>\");\r\n      this.finalDate = fechaObtenidaDelHijo + \" 23:59:59\";\r\n      console.log(this.finalDate);\r\n      // this.updateMediciones()\r\n    },\r\n\r\n    selectedItemPiscicola() {\r\n      this.selectedPiscicola = this.piscicolasfull.find(\r\n        x => x.id_piscicolas === this.id_piscicolas.value\r\n      );\r\n      this.updateEstanques();\r\n    },\r\n    selectedItemEstanque() {\r\n      this.selectedEstanque = this.estanquesfull.find(\r\n        x => x.id_estanque === this.id_estanque.value\r\n      );\r\n      this.updateSensores();\r\n    },\r\n    updatePiscicolas() {\r\n      postRequest(\"piscicolas\").then(response => {\r\n        if (response.data.res == 200) {\r\n          this.piscicolas = response.data.data.map(piscicola => ({\r\n            text: piscicola.nombre_piscicola,\r\n            value: piscicola.id_piscicolas\r\n          }));\r\n          this.piscicolasfull = response.data.data;\r\n        } else alert(response.data.msg);\r\n      });\r\n    },\r\n    updateEstanques() {\r\n      postRequest(\"estanques\", {\r\n        id_piscicolas: this.id_piscicolas.value\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.estanques = response.data.data.map(estanque => ({\r\n            text: estanque.nombre_estanque,\r\n            value: estanque.id_estanque\r\n          }));\r\n          this.estanquesfull = response.data.data;\r\n        }\r\n      });\r\n    },\r\n    updateSensores() {\r\n      postRequest(\"sensores\", { id_estanque: this.id_estanque.value }).then(\r\n        response => {\r\n          if (response.data.res == 200) {\r\n            this.sensoresfull = response.data.data;\r\n          }\r\n          console.log(\"sensoresfull------>\");\r\n          console.log(this.sensoresfull);\r\n        }\r\n      );\r\n    },\r\n    updateMedicionesIndicadores() {\r\n      console.log(\"Pasó por updateMedicionesIndicadores\");\r\n      postRequest(\"mediciones\", {\r\n        id_estanque: this.id_estanque.value,\r\n        initDate: this.initDate,\r\n        finalDate: this.finalDate\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.mediciones = response.data.data;\r\n          console.log(\"mediciones:\");\r\n          console.log(this.mediciones);\r\n        }\r\n      });\r\n      postRequest(\"data_calculada\", {\r\n        id_estanque: this.id_estanque.value\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.indicadores = response.data.data;\r\n          console.log(\"indicadores:\");\r\n          console.log(this.indicadores);\r\n          this.graficas();\r\n        }\r\n      });\r\n    },\r\n    graficas() {\r\n      console.log(\"Pasó por graficas\");\r\n      console.log(this.intervalId);\r\n      console.log(\"-----------\");\r\n\r\n      const onlyUnique = (value, index, self) => self.indexOf(value) === index;\r\n      const sensores = this.mediciones\r\n        .map(m => m.id_sensores)\r\n        .filter(onlyUnique);\r\n      this.periodos = this.indicadores.map(m => m.periodo).filter(onlyUnique);\r\n      console.log(\"periodos----->\");\r\n      console.log(this.periodos);\r\n\r\n      const dataCharts = sensores.map(sensor => {\r\n        const medicionesSensor = this.mediciones.filter(\r\n          m => m.id_sensores == sensor\r\n        );\r\n        const indicadoresSensor = this.indicadores.filter(\r\n          i => i.id_sensores == sensor\r\n        );\r\n        const dataSensor = this.sensoresfull.filter(\r\n          s => s.id_sensores == sensor\r\n        );\r\n        const dataChartsDonut = indicadoresSensor.map(indi => ({\r\n          labels: [\"Max\", \"Min\"],\r\n          datasets: [\r\n            {\r\n              data: [indi[\"max(dato)\"], indi[\"min(dato)\"]],\r\n              backgroundColor: [\"#F08080\", \"#FFF176\"],\r\n              borderWidth: 3\r\n            }\r\n          ]\r\n        }));\r\n        return {\r\n          line: {\r\n            labels: medicionesSensor.map(m => m.fecha),\r\n            datasets: [\r\n              {\r\n                label: dataSensor.map(m => m.nombre_sensor),\r\n                borderColor: \"#d048b6\",\r\n                borderWidth: 2,\r\n                pointBackgroundColor: \"#d048b6\",\r\n                pointBorderColor: \"rgba(255,255,255,0)\",\r\n                cubicInterpolationMode: \"monotone\",\r\n                data: medicionesSensor.map(m => m.dato)\r\n                //\"#325d79\",\r\n                //\"#\" + (((1 << 24) * Math.random()) | 0).toString(16),\r\n              }\r\n            ]\r\n          },\r\n          donuts: dataChartsDonut\r\n        };\r\n      });\r\n      this.dataCharts = dataCharts;\r\n      console.log(\"dataCharts------->\");\r\n      console.log(this.dataCharts);\r\n    },\r\n    updateAll() {\r\n      // this.updateMedicionesIndicadores()\r\n      this.intervalId = setInterval(() => {\r\n        this.updateMedicionesIndicadores();\r\n      }, 4000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"sourceRoot":"src/views"}]}