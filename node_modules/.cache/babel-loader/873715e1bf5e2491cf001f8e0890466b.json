{"remainingRequest":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\visualizacion.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\visualizacion.vue","mtime":1597620376499},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["visualizacion.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-container>\r\n    <v-row>\r\n      <v-col xs=\"12\" sm=\"6\">\r\n        <v-card class=\"pa-2 ma-5\" width=\"350px\" shaped>\r\n          <v-card-title>Piscícola</v-card-title>\r\n          <v-card-text>\r\n            <v-combobox\r\n              color=\"#325d79\"\r\n              item-color=\"#325d79\"\r\n              solo\r\n              hide-details\r\n              class=\"mb-5\"\r\n              :label=\"id_piscicolas.text\"\r\n              :items=\"piscicolas\"\r\n              @change=\"() => selectedItemPiscicola()\"\r\n              v-model=\"id_piscicolas\"\r\n            ></v-combobox>\r\n            <p class=\"pb-1\">Ubicación: {{ selectedPiscicola.ubicacion }}</p>\r\n            <p>Descripción: {{ selectedPiscicola.descripcion }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      <v-col xs=\"12\" sm=\"6\">\r\n        <v-card\r\n          class=\"pa-2 ma-5\"\r\n          width=\"350px\"\r\n          shaped\r\n          :disabled=\"id_piscicolas.value ? false : true\"\r\n        >\r\n          <v-card-title>Estanque</v-card-title>\r\n          <v-card-text class=\"mt-2\">\r\n            <v-combobox\r\n              color=\"#325d79\"\r\n              item-color=\"#325d79\"\r\n              solo\r\n              hide-details\r\n              class=\"mb-12\"\r\n              :label=\"id_estanque.text\"\r\n              :items=\"estanques\"\r\n              @change=\"() => selectedItemEstanque()\"\r\n              v-model=\"id_estanque\"\r\n            ></v-combobox>\r\n            <p>Descripción: {{ selectedEstanque.descripcion }}</p>\r\n          </v-card-text>\r\n        </v-card>\r\n      </v-col>\r\n      <v-col cols=\"6\">\r\n        <Calendar title=\"Inicial\" @selectedDate=\"selectedInitDate\" />\r\n      </v-col>\r\n      <v-col cols=\"6\">\r\n        <Calendar title=\"Final\" @selectedDate=\"selectedFinalDate\" />\r\n      </v-col>\r\n\r\n      <v-col class=\"text-center\" cols=\"12\">\r\n        <v-btn color=\"#325d79\" outlined @click=\"updateAll()\">Visualizar</v-btn>\r\n      </v-col>\r\n      <v-col cols=\"12\" v-for=\"(chartData, index) in dataCharts\" :key=\"index\">\r\n        <v-card class=\"pa-2 ma-auto\" width=\"2000px\" shaped>\r\n          <v-container>\r\n            <v-row>\r\n              <v-col cols=\"6\">\r\n                <v-card class=\"px-5 mx-2\" width=\"500px\">\r\n                  <MyChart />\r\n                  <line-chart\r\n                    :chartData=\"chartData.line\"\r\n                    :options=\"chartOptions\"\r\n                  />\r\n                </v-card>\r\n              </v-col>\r\n              <v-col cols=\"6\">\r\n                <v-card\r\n                  class=\"pa-5 ma-auto\"\r\n                  width=\"300px\"\r\n                  raised\r\n                  elevation=\"5\"\r\n                  color=\"#FAFAFA\"\r\n                >\r\n                  <v-card-title>Indicadores</v-card-title>\r\n                  <v-container>\r\n                    <v-row>\r\n                      <v-col\r\n                        cols=\"6\"\r\n                        v-for=\"(donut, index) in chartData.donuts\"\r\n                        :key=\"index\"\r\n                      >\r\n                        <p>{{ periodos[index] }}:</p>\r\n                        <doughnut-chart\r\n                          :chartdata=\"donut\"\r\n                          :options=\"chartOptions2\"\r\n                        />\r\n                      </v-col>\r\n                    </v-row>\r\n                  </v-container>\r\n                </v-card>\r\n              </v-col>\r\n            </v-row>\r\n          </v-container>\r\n        </v-card>\r\n      </v-col>\r\n    </v-row>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport Calendar from \"@/components/Calendar.vue\";\r\nimport { postRequest } from \"@/plugins/api.js\";\r\nimport LineChart from \"@/components/AreaChart.vue\";\r\nimport DoughnutChart from \"@/components/ChartDonut.vue\";\r\nimport MyChart from \"@/components/MyChart.vue\";\r\n\r\nexport default {\r\n  components: { LineChart, DoughnutChart, Calendar, MyChart },\r\n  created() {\r\n    this.updatePiscicolas();\r\n  },\r\n\r\n  beforeDestroy() {\r\n    clearInterval(this.intervalId);\r\n  },\r\n  data() {\r\n    return {\r\n      initDate: new Date().toISOString().substr(0, 10),\r\n      finalDate: new Date().toISOString().substr(0, 10),\r\n\r\n      intervalId: null,\r\n\r\n      piscicolas: [],\r\n      piscicolasfull: [],\r\n      selectedPiscicola: {\r\n        descripcion: \"\",\r\n        id_piscicolas: null,\r\n        id_usuario: null,\r\n        nombre_piscicola: \"\",\r\n        ubicacion: \"\"\r\n      },\r\n      estanques: [],\r\n      estanquesfull: [],\r\n      selectedEstanque: {\r\n        id_estanque: null,\r\n        id_piscicolas: null,\r\n        nombre_estanque: \"\",\r\n        descripcion: \"\"\r\n      },\r\n      sensoresfull: [],\r\n      id_piscicolas: { text: \"Seleccionar piscícola\", value: 0 },\r\n      id_estanque: { text: \"Seleccionar Estanque\", value: 0 },\r\n      mediciones: [],\r\n      indicadores: null,\r\n      periodos: [],\r\n      datoSensor: [],\r\n      dataCalculadafull: [],\r\n      dataCharts: [],\r\n      chartOptions: {\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              type: \"time\",\r\n              time: {\r\n                unit: \"hour\",\r\n                displayFormats: {\r\n                  hour: \"HH:mm\"\r\n                }\r\n              },\r\n              ticks: {}\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      chartOptions2: {\r\n        rotation: Math.PI,\r\n        circumference: Math.PI\r\n      }\r\n    };\r\n  },\r\n  async mounted() {},\r\n  methods: {\r\n    selectedInitDate(fechaObtenidaDelHijo) {\r\n      console.log(\"fechaObtenidaDelHijo ------>\");\r\n      console.log(fechaObtenidaDelHijo);\r\n      console.log(\"initDate ------>\");\r\n      this.initDate = fechaObtenidaDelHijo + \" 00:00:00\";\r\n      console.log(this.initDate);\r\n      //this.updateMediciones()\r\n    },\r\n    selectedFinalDate(fechaObtenidaDelHijo) {\r\n      console.log(\"fechaObtenidaDelHijo ------>\");\r\n      console.log(fechaObtenidaDelHijo);\r\n      console.log(\"finalDate ------>\");\r\n      this.finalDate = fechaObtenidaDelHijo + \" 23:59:59\";\r\n      console.log(this.finalDate);\r\n      // this.updateMediciones()\r\n    },\r\n\r\n    selectedItemPiscicola() {\r\n      this.selectedPiscicola = this.piscicolasfull.find(\r\n        x => x.id_piscicolas === this.id_piscicolas.value\r\n      );\r\n      this.updateEstanques();\r\n    },\r\n    selectedItemEstanque() {\r\n      this.selectedEstanque = this.estanquesfull.find(\r\n        x => x.id_estanque === this.id_estanque.value\r\n      );\r\n      this.updateSensores();\r\n    },\r\n    updatePiscicolas() {\r\n      postRequest(\"piscicolas\").then(response => {\r\n        if (response.data.res == 200) {\r\n          this.piscicolas = response.data.data.map(piscicola => ({\r\n            text: piscicola.nombre_piscicola,\r\n            value: piscicola.id_piscicolas\r\n          }));\r\n          this.piscicolasfull = response.data.data;\r\n        } else alert(response.data.msg);\r\n      });\r\n    },\r\n    updateEstanques() {\r\n      postRequest(\"estanques\", {\r\n        id_piscicolas: this.id_piscicolas.value\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.estanques = response.data.data.map(estanque => ({\r\n            text: estanque.nombre_estanque,\r\n            value: estanque.id_estanque\r\n          }));\r\n          this.estanquesfull = response.data.data;\r\n        }\r\n      });\r\n    },\r\n    updateSensores() {\r\n      postRequest(\"sensores\", { id_estanque: this.id_estanque.value }).then(\r\n        response => {\r\n          if (response.data.res == 200) {\r\n            this.sensoresfull = response.data.data;\r\n          }\r\n          console.log(\"sensoresfull------>\");\r\n          console.log(this.sensoresfull);\r\n        }\r\n      );\r\n    },\r\n    updateMedicionesIndicadores() {\r\n      console.log(\"Pasó por updateMedicionesIndicadores\");\r\n      postRequest(\"mediciones\", {\r\n        id_estanque: this.id_estanque.value,\r\n        initDate: this.initDate,\r\n        finalDate: this.finalDate\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.mediciones = response.data.data;\r\n          console.log(\"mediciones:\");\r\n          console.log(this.mediciones);\r\n        }\r\n      });\r\n      postRequest(\"data_calculada\", {\r\n        id_estanque: this.id_estanque.value\r\n      }).then(response => {\r\n        if (response.data.res == 200) {\r\n          this.indicadores = response.data.data;\r\n          console.log(\"indicadores:\");\r\n          console.log(this.indicadores);\r\n          this.graficas();\r\n        }\r\n      });\r\n    },\r\n    graficas() {\r\n      console.log(\"Pasó por graficas\");\r\n      console.log(this.intervalId);\r\n      console.log(\"-----------\");\r\n\r\n      const onlyUnique = (value, index, self) => self.indexOf(value) === index;\r\n      const sensores = this.mediciones\r\n        .map(m => m.id_sensores)\r\n        .filter(onlyUnique);\r\n      this.periodos = this.indicadores.map(m => m.periodo).filter(onlyUnique);\r\n      console.log(\"periodos----->\");\r\n      console.log(this.periodos);\r\n\r\n      const dataCharts = sensores.map(sensor => {\r\n        const medicionesSensor = this.mediciones.filter(\r\n          m => m.id_sensores == sensor\r\n        );\r\n        const indicadoresSensor = this.indicadores.filter(\r\n          i => i.id_sensores == sensor\r\n        );\r\n        const dataSensor = this.sensoresfull.filter(\r\n          s => s.id_sensores == sensor\r\n        );\r\n        const dataChartsDonut = indicadoresSensor.map(indi => ({\r\n          labels: [\"Max\", \"Min\"],\r\n          datasets: [\r\n            {\r\n              data: [indi[\"max(dato)\"], indi[\"min(dato)\"]],\r\n              backgroundColor: [\"#F08080\", \"#FFF176\"],\r\n              borderWidth: 3\r\n            }\r\n          ]\r\n        }));\r\n        return {\r\n          line: {\r\n            labels: medicionesSensor.map(m => m.fecha),\r\n            datasets: [\r\n              {\r\n                label: dataSensor.map(m => m.nombre_sensor),\r\n                pointRadius: 2,\r\n                pointBorderWidth: 2,\r\n                pointBorderColor: \"orange\",\r\n                pointBackgroundColor: \"transparent\",\r\n                borderColor: \"#325d79\",\r\n                backgroundColor: \"#318fb5\",\r\n                data: medicionesSensor.map(m => m.dato)\r\n                //\"#325d79\",\r\n                //\"#\" + (((1 << 24) * Math.random()) | 0).toString(16),\r\n              }\r\n            ]\r\n          },\r\n          donuts: dataChartsDonut\r\n        };\r\n      });\r\n      this.dataCharts = dataCharts;\r\n      console.log(\"dataCharts------->\");\r\n      console.log(this.dataCharts);\r\n    },\r\n    updateAll() {\r\n      // this.updateMedicionesIndicadores()\r\n      this.intervalId = setInterval(() => {\r\n        this.updateMedicionesIndicadores();\r\n      }, 4000);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n"],"sourceRoot":"src/views"}]}