{"remainingRequest":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js??ref--18-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\Reports.vue?vue&type=template&id=ff4e9e16&scoped=true&","dependencies":[{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\src\\views\\Reports.vue","mtime":1597799270987},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1574476662000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\IDANGELES\\Documents\\UD\\Tesis\\WEB\\Front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtY29udGFpbmVyIiwKICAgIFsKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgeyBhdHRyczogeyB4czogIjEyIiwgc206ICI2IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTEgbXgtMTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogeyB3aWR0aDogIjM1MHB4Iiwgc2hhcGVkOiAiIiwgZWxldmF0aW9uOiAiNSIgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInYtY2FyZC10aXRsZSIsIFtfdm0uX3YoIlBpc2PDrWNvbGEiKV0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWNvbWJvYm94IiwgewogICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1iLTUiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzMyNWQ3OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIml0ZW0tY29sb3IiOiAiIzMyNWQ3OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc29sbzogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImhpZGUtZGV0YWlscyI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBfdm0uaWRfcGlzY2ljb2xhcy50ZXh0LAogICAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBfdm0ucGlzY2ljb2xhcwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdGVkSXRlbVBpc2NpY29sYSgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24oJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uaWRfZXN0YW5xdWUgPSBfdm0uaWRfZXN0YW5xdWVEZWZhdWwKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5pZF9waXNjaWNvbGFzLAogICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5pZF9waXNjaWNvbGFzID0gJCR2CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiaWRfcGlzY2ljb2xhcyIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIHsgc3RhdGljQ2xhc3M6ICJwYi0xIiB9LCBbCiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdigKICAgICAgICAgICAgICAgICAgICAgICAgICAiVWJpY2FjacOzbjogIiArCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLnNlbGVjdGVkUGlzY2ljb2xhLnViaWNhY2lvbikKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICJEZXNjcmlwY2nDs246ICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5zZWxlY3RlZFBpc2NpY29sYS5kZXNjcmlwY2lvbikKICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgeyBhdHRyczogeyB4czogIjEyIiwgc206ICI2IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTEgbXgtMTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMzUwcHgiLAogICAgICAgICAgICAgICAgICAgIHNoYXBlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNSIsCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5pZF9waXNjaWNvbGFzLnZhbHVlID8gZmFsc2UgOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCBbX3ZtLl92KCJFc3RhbnF1ZSIpXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWNhcmQtdGV4dCIsCiAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogIm10LTIiIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoInYtY29tYm9ib3giLCB7CiAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWItMTIiLAogICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiIzMyNWQ3OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgIml0ZW0tY29sb3IiOiAiIzMyNWQ3OSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgc29sbzogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgImhpZGUtZGV0YWlscyI6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiBfdm0uaWRfZXN0YW5xdWUudGV4dCwKICAgICAgICAgICAgICAgICAgICAgICAgICBpdGVtczogX3ZtLmVzdGFucXVlcwogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNlbGVjdGVkSXRlbUVzdGFucXVlKCkKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5pZF9lc3RhbnF1ZSwKICAgICAgICAgICAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24oJCR2KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uaWRfZXN0YW5xdWUgPSAkJHYKICAgICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJpZF9lc3RhbnF1ZSIKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgICAgICBfYygicCIsIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgICAgICJEZXNjcmlwY2nDs246ICIgKwogICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS5zZWxlY3RlZEVzdGFucXVlLmRlc2NyaXBjaW9uKQogICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICBdKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKSwKICAgICAgICAgIF9jKAogICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICB7IGF0dHJzOiB7IGNvbHM6ICI2IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTEgbXgtMTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMzUwcHgiLAogICAgICAgICAgICAgICAgICAgIHNoYXBlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNSIsCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5pZF9lc3RhbnF1ZS52YWx1ZSA/IGZhbHNlIDogdHJ1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJDYWxlbmRhciIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdGl0bGU6ICJJbmljaWFsIiB9LAogICAgICAgICAgICAgICAgICAgICAgICBvbjogeyBzZWxlY3RlZERhdGU6IF92bS5zZWxlY3RlZEluaXREYXRlIH0KICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAxCiAgICAgICAgICAgICAgKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNvbCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sczogIjYiIH0gfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAicGEtMSBteC0xMCIsCiAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgd2lkdGg6ICIzNTBweCIsCiAgICAgICAgICAgICAgICAgICAgc2hhcGVkOiAiIiwKICAgICAgICAgICAgICAgICAgICBlbGV2YXRpb246ICI1IiwKICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogX3ZtLmluaXREYXRlQmFuZGVyYSA/IGZhbHNlIDogdHJ1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1jYXJkLXRleHQiLAogICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgIF9jKCJDYWxlbmRhciIsIHsKICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdGl0bGU6ICJGaW5hbCIgfSwKICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgc2VsZWN0ZWREYXRlOiBfdm0uc2VsZWN0ZWRGaW5hbERhdGUgfQogICAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgeyBhdHRyczogeyB4czogIjEyIiwgc206ICI2IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTEgbXgtMTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMzUwcHgiLAogICAgICAgICAgICAgICAgICAgIHNoYXBlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNSIsCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5pZF9lc3RhbnF1ZS52YWx1ZSA/IGZhbHNlIDogdHJ1ZQogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1jYXJkLXRpdGxlIiwgW192bS5fdigiUmVwb3J0ZSBkZSBJbmRpY2Fkb3JlcyIpXSksCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGV4dCIsIFsKICAgICAgICAgICAgICAgICAgICBfdm0uX3YoCiAgICAgICAgICAgICAgICAgICAgICAiU2UgZ2VuZXJhcsOhIHVuIHJlcG9ydGUgZW4gZm9ybWF0byAuY3N2IGNvbiBsb3MgaW5kaWNhZG9yZXMgKGF2ZywgbcOtbiwgbcOheCkgZGVsIMO6bHRpbW8gbWVzLCDDumx0aW1hIHNlbWFuYSwgZMOtYSBhbnRlcmlvciB5IGTDrWEgYWN0dWFsIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWNhcmQtYWN0aW9ucyIsCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgImRvd25sb2FkLWNzdiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogX3ZtLmRhdGFDYWxjdWxhZGFmdWxsLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogIkluZGljYWRvcmVzLmNzdiIKICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGNvbG9yOiAiIzMyNWQ3OSIsIG91dGxpbmVkOiAiIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCJEZXNjYXJnYXIiKV0KICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY29sIiwKICAgICAgICAgICAgeyBhdHRyczogeyB4czogIjEyIiwgc206ICI2IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInBhLTEgbXgtMTAiLAogICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgIHdpZHRoOiAiMzUwcHgiLAogICAgICAgICAgICAgICAgICAgIHNoYXBlZDogIiIsCiAgICAgICAgICAgICAgICAgICAgZWxldmF0aW9uOiAiNSIsCiAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5maW5hbERhdGVCYW5kZXJhID8gZmFsc2UgOiB0cnVlCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJSZXBvcnRlIEhpc3TDs3JpY28gZGUgTWVkaWNpb25lcyIpCiAgICAgICAgICAgICAgICAgIF0pLAogICAgICAgICAgICAgICAgICBfYygidi1jYXJkLXRleHQiLCBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIlNlIGdlbmVyYXLDoSB1biByZXBvcnRlIGVuIGZvcm1hdG8gLmNzdiBjb24gZWwgaGlzdMOzcmljbyBkZSBtZWRpY2lvbmVzIGRlbCBlc3RhbnF1ZSB5IHJhbmdvIGRlIGZlY2hhcyBzZWxlY2Npb25hZG8iCiAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICBdKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtY2FyZC1hY3Rpb25zIiwKICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICBfYygidi1zcGFjZXIiKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZG93bmxvYWQtY3N2IiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiBfdm0ubWVkaWNpb25lc2Z1bGwsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiAiSGlzdG9yaWNvX01lZGljaW9uZXMuY3N2IgogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgY29sb3I6ICIjMzI1ZDc5Iiwgb3V0bGluZWQ6ICIiIH0gfSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtfdm0uX3YoIkRlc2NhcmdhciIpXQogICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApCiAgICBdLAogICAgMQogICkKfQp2YXIgc3RhdGljUmVuZGVyRm5zID0gW10KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}